{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\uita\\\\uitareact\\\\src\\\\Courses\\\\Certificates\\\\Certificates.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport globalVar from '../../../globalVar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Certificate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleCertificateClick = async certificationId => {\n      // Log the certificateId in the console\n      console.log(\"Clicked Certificate ID:\", certificationId);\n\n      // Call the API to check exam availability based on the certificationId\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          certificationId: certificationId\n        })\n      };\n      try {\n        const response = await fetch(globalVar.url + 'available_exam', requestOptions);\n        const data = await response.json();\n        // Log available exams in the console\n        console.log(\"Available Exams for Certificate ID\", certificationId, \":\", data);\n      } catch (error) {\n        console.log(\"Error fetching available exams:\", error);\n      }\n    };\n  }\n  render() {\n    const {\n      certificationId,\n      certification_Name,\n      vendorId\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-box\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/exam-availability/${certificationId}?vendorId=${vendorId}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-thumbnail\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            className: \"w-100\",\n            src: '/assets/images/courses/coumbnail.jpg',\n            alt: \"certificate thumbnail\",\n            onError: ({\n              currentTarget\n            }) => {\n              currentTarget.onerror = null; // prevents looping\n              currentTarget.src = \"/assets/images/courses/course-thumbnail.jpg\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), certification_Name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-title\",\n          children: certification_Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, certificationId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nCertificate.propTypes = {\n  certificationId: PropTypes.number.isRequired,\n  certification_Name: PropTypes.string.isRequired,\n  vendorId: PropTypes.number.isRequired // Add vendorId prop type\n};\nexport default Certificate;","map":{"version":3,"names":["PropTypes","React","Link","Image","globalVar","jsxDEV","_jsxDEV","Certificate","Component","constructor","args","handleCertificateClick","certificationId","console","log","requestOptions","method","headers","body","JSON","stringify","response","fetch","url","data","json","error","render","certification_Name","vendorId","props","className","children","to","src","alt","onError","currentTarget","onerror","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","number","isRequired","string"],"sources":["C:/Users/ASUS/Documents/GitHub/uita/uitareact/src/Courses/Certificates/Certificates.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from 'react-bootstrap';\r\nimport globalVar from '../../../globalVar';\r\n\r\nexport class Certificate extends React.Component {\r\n    static propTypes = {\r\n        certificationId: PropTypes.number.isRequired,\r\n        certification_Name: PropTypes.string.isRequired,\r\n        vendorId: PropTypes.number.isRequired // Add vendorId prop type\r\n    };\r\n\r\n    handleCertificateClick = async (certificationId) => {\r\n        // Log the certificateId in the console\r\n        console.log(\"Clicked Certificate ID:\", certificationId);\r\n\r\n        // Call the API to check exam availability based on the certificationId\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ certificationId: certificationId })\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(globalVar.url + 'available_exam', requestOptions);\r\n            const data = await response.json();\r\n            // Log available exams in the console\r\n            console.log(\"Available Exams for Certificate ID\", certificationId, \":\", data);\r\n        } catch (error) {\r\n            console.log(\"Error fetching available exams:\", error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { certificationId, certification_Name, vendorId } = this.props;\r\n\r\n        return (\r\n            <div className=\"course-box\" key={certificationId}>\r\n                {/* Call handleCertificateClick on click */}\r\n                <Link to={`/exam-availability/${certificationId}?vendorId=${vendorId}`}>\r\n                    <div className=\"course-thumbnail\">\r\n                        <Image \r\n                            className='w-100' \r\n                            src={'/assets/images/courses/coumbnail.jpg'} \r\n                            alt=\"certificate thumbnail\"\r\n                            onError={({ currentTarget }) => {\r\n                                currentTarget.onerror = null; // prevents looping\r\n                                currentTarget.src = \"/assets/images/courses/course-thumbnail.jpg\";\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {certification_Name && (\r\n                        <div className=\"course-title\">{certification_Name}</div>\r\n                    )}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Certificate;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,WAAW,SAASN,KAAK,CAACO,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAO7CC,sBAAsB,GAAG,MAAOC,eAAe,IAAK;MAChD;MACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,eAAe,CAAC;;MAEvD;MACA,MAAMG,cAAc,GAAG;QACnBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,eAAe,EAAEA;QAAgB,CAAC;MAC7D,CAAC;MAED,IAAI;QACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAClB,SAAS,CAACmB,GAAG,GAAG,gBAAgB,EAAER,cAAc,CAAC;QAC9E,MAAMS,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC;QACAZ,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,eAAe,EAAE,GAAG,EAAEY,IAAI,CAAC;MACjF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZb,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEY,KAAK,CAAC;MACzD;IACJ,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEf,eAAe;MAAEgB,kBAAkB;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAEpE,oBACIxB,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAEvB1B,OAAA,CAACJ,IAAI;QAAC+B,EAAE,EAAG,sBAAqBrB,eAAgB,aAAYiB,QAAS,EAAE;QAAAG,QAAA,gBACnE1B,OAAA;UAAKyB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC7B1B,OAAA,CAACH,KAAK;YACF4B,SAAS,EAAC,OAAO;YACjBG,GAAG,EAAE,sCAAuC;YAC5CC,GAAG,EAAC,uBAAuB;YAC3BC,OAAO,EAAEA,CAAC;cAAEC;YAAc,CAAC,KAAK;cAC5BA,aAAa,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;cAC9BD,aAAa,CAACH,GAAG,GAAG,6CAA6C;YACrE;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,EACLd,kBAAkB,iBACftB,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEJ;QAAkB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC1D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GAjBsB9B,eAAe;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkB3C,CAAC;EAEd;AACJ;AArDanC,WAAW,CACboC,SAAS,GAAG;EACf/B,eAAe,EAAEZ,SAAS,CAAC4C,MAAM,CAACC,UAAU;EAC5CjB,kBAAkB,EAAE5B,SAAS,CAAC8C,MAAM,CAACD,UAAU;EAC/ChB,QAAQ,EAAE7B,SAAS,CAAC4C,MAAM,CAACC,UAAU,CAAC;AAC1C,CAAC;AAkDL,eAAetC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}