{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\uita\\\\uitareact\\\\src\\\\Courses\\\\Certificates\\\\Certificates.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Certificate from './Certificate/Certificate';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport globalVar from '../../globalVar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Certificates extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      certificatesArray: [],\n      courseId: window.location.pathname.split(\"/\").pop(),\n      vendorId: props.id\n    };\n  }\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    this.loadCertificates(id);\n  }\n  loadCertificates(vendorId) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        vendorId: vendorId\n      })\n    };\n    fetch(globalVar.url + 'certificates', requestOptions).then(res => res.json()).then(response => {\n      this.setState({\n        certificatesArray: response.data\n      });\n    }).catch(error => console.log(error));\n  }\n  render() {\n    const {\n      certificatesArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section section-courses inner-page\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: certificatesArray.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n          children: certificatesArray.map(e => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            lg: 4,\n            xl: 3,\n            children: /*#__PURE__*/_jsxDEV(Certificate, {\n              certificationId: e.certificationId,\n              certification_Name: e.certification_Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, e.certificationId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: \"No certificates available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\nCertificates.propTypes = {\n  id: PropTypes.number.isRequired,\n  courseName: PropTypes.string\n};\nexport default Certificates;","map":{"version":3,"names":["PropTypes","React","Component","Link","Certificate","Container","Row","Col","globalVar","jsxDEV","_jsxDEV","Certificates","constructor","props","state","certificatesArray","courseId","window","location","pathname","split","pop","vendorId","id","componentDidMount","loadCertificates","requestOptions","method","headers","body","JSON","stringify","fetch","url","then","res","json","response","setState","data","catch","error","console","log","render","className","children","length","map","e","sm","lg","xl","certificationId","certification_Name","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","number","isRequired","courseName","string"],"sources":["C:/Users/ASUS/Documents/GitHub/uita/uitareact/src/Courses/Certificates/Certificates.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Certificate from './Certificate/Certificate';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport globalVar from '../../globalVar';\r\n\r\nexport class Certificates extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n        courseName: PropTypes.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            certificatesArray: [],\r\n            courseId: window.location.pathname.split(\"/\").pop(),\r\n            vendorId: props.id\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { id } = this.props;\r\n        this.loadCertificates(id);\r\n    }\r\n\r\n    loadCertificates(vendorId) {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ vendorId: vendorId })\r\n        };\r\n        fetch(globalVar.url + 'certificates', requestOptions)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    certificatesArray: response.data\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const { certificatesArray } = this.state;\r\n\r\n        return (\r\n            <section className=\"section section-courses inner-page\">\r\n                <Container>\r\n                    {certificatesArray.length > 0 ? (\r\n                        <Row>\r\n                            {certificatesArray.map((e) => (\r\n                                <Col sm={6} lg={4} xl={3} key={e.certificationId}>\r\n                                    <Certificate\r\n                                        certificationId={e.certificationId}\r\n                                        certification_Name={e.certification_Name}\r\n                                    />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    ) : (\r\n                        <div className=\"alert alert-info\">\r\n                            No certificates available.\r\n                        </div>\r\n                    )}\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Certificates;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}