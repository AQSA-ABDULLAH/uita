{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\uita\\\\uitareact\\\\src\\\\ExamAvailability\\\\ExamAvailability.js\",\n  _s = $RefreshSig$();\n// src/ExamAvailability/ExamAvailability.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport globalVar from '../globalVar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamAvailability = () => {\n  _s();\n  const {\n    certificationId\n  } = useParams();\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchExams = async () => {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          certificationId: certificationId\n        })\n      };\n      try {\n        const response = await fetch(globalVar.url + 'available_exam', requestOptions);\n        const data = await response.json();\n        setExams(data.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchExams();\n  }, [certificationId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Exams for Certificate ID: \", certificationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        height: '250px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching exams: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: exams.length > 0 ? exams.map(exam => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: exam.exam_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", exam.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated At: \", exam.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created At: \", exam.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this)\n      }, exam.examId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No exams available for this certificate.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ExamAvailability, \"xFsW9lBVI5daYrOz9Vd49tikaqM=\", false, function () {\n  return [useParams];\n});\n_c = ExamAvailability;\nexport default ExamAvailability;\nvar _c;\n$RefreshReg$(_c, \"ExamAvailability\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Row","Col","Spinner","globalVar","jsxDEV","_jsxDEV","ExamAvailability","_s","certificationId","exams","setExams","loading","setLoading","error","setError","fetchExams","requestOptions","method","headers","body","JSON","stringify","response","fetch","url","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","animation","role","message","length","map","exam","sm","lg","xl","exam_Name","status","updated_at","created_at","examId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/GitHub/uita/uitareact/src/ExamAvailability/ExamAvailability.js"],"sourcesContent":["// src/ExamAvailability/ExamAvailability.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport globalVar from '../globalVar';\r\n\r\nconst ExamAvailability = () => {\r\n    const { certificationId } = useParams();\r\n    const [exams, setExams] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchExams = async () => {\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ certificationId: certificationId })\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(globalVar.url + 'available_exam', requestOptions);\r\n                const data = await response.json();\r\n                setExams(data.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchExams();\r\n    }, [certificationId]);\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Available Exams for Certificate ID: {certificationId}</h2>\r\n            {loading ? (\r\n                <div className='d-flex align-items-center justify-content-center' style={{ height: '250px' }}>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            ) : error ? (\r\n                <p>Error fetching exams: {error.message}</p>\r\n            ) : (\r\n                <Row>\r\n                    {exams.length > 0 ? (\r\n                        exams.map((exam) => (\r\n                            <Col sm={6} lg={4} xl={3} key={exam.examId}>\r\n                                <div className=\"exam-box\">\r\n                                    <h3>{exam.exam_Name}</h3>\r\n                                    <p>Status: {exam.status}</p>\r\n                                    <p>Updated At: {exam.updated_at}</p>\r\n                                    <p>Created At: {exam.created_at}</p>\r\n                                </div>\r\n                            </Col>\r\n                        ))\r\n                    ) : (\r\n                        <p>No exams available for this certificate.</p>\r\n                    )}\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ExamAvailability;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}